{"version":3,"sources":["components/MovieCard/styles.ts","data/fetch/functions.ts","components/MovieCard/MovieCard.tsx","data/state/constants.ts","data/state/actions.ts","hooks/useAppSelector/index.ts","App.tsx","hooks/useAppDispach/index.ts","data/state/reducer.ts","data/state/store.ts","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","createStyles","header","fontWeight","fontSize","textAlign","image","maxWidth","maxHeight","display","marginLeft","marginRight","width","actions","justifyContent","thumbUpIcon","color","thumbDownIcon","spanElement","fontStyle","title","fadeOutLeft","transform","opacity","backgroundColor","transition","fadeOutRight","visible","fetchRecommendationsFromAPI","a","fetch","process","headers","Accept","response","json","acceptRecommendation","id","method","body","rejectRecommendation","MovieCard","imageURL","summary","rating","finishRecommendation","useState","setVisible","classes","acceptRecommendationMutation","useMutation","rejectRecommendationMutation","className","useMemo","Card","CardContent","Typography","gutterBottom","variant","Box","src","alt","CardActions","Button","size","onClick","setTimeout","mutate","SET_FINISHED_INDEXES","SET_ACTIVE_INDEX","SET_ALL_RECOMMENDATIONS","setActiveIndex","index","type","types","payload","useAppSelector","useSelector","container","height","overflow","paddingTop","messageCard","alignItems","App","dispatch","useDispatch","finishedIndexes","state","activeIndex","useQuery","onSuccess","data","isLoading","error","currentRecommendation","find","recommendation","useCallback","finishedIndexesCopy","push","dataIndexes","map","nextRecommendation","indexOf","message","Container","initialState","allRecommendations","reducer","action","store","initialStateFromReducer","createStore","compose","applyMiddleware","thunk","devToolsEnhancer","configureStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","client","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfb32a2d.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@mui/styles'\n\nexport const useStyles = makeStyles(() => {\n    return createStyles({\n        header: {\n            fontWeight: 'bold',\n            fontSize: 40,\n            textAlign: 'center',\n        },\n        image: {\n            maxWidth: '100%',\n            maxHeight: '100%',\n            display: 'block',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            width: '100%',\n        },\n        actions: {\n            display: 'flex',\n            justifyContent: 'space-evenly',\n        },\n        thumbUpIcon: {\n            color: 'green',\n        },\n        thumbDownIcon: {\n            color: 'red',\n        },\n        spanElement: {\n            fontWeight: 'bold',\n            fontStyle: 'italic',\n        },\n        title: {\n            textAlign: 'center',\n            fontSize: '34px !important',\n        },\n        fadeOutLeft: {\n            transform: 'translateX(-100%)',\n            opacity: 0,\n            backgroundColor: 'green !important',\n            transition: 'all .5s !important',\n        },\n        fadeOutRight: {\n            transform: 'translateX(100%)',\n            opacity: 0,\n            backgroundColor: 'red !important',\n            transition: 'all .5s !important',\n        },\n        visible: {\n            opacity: 1,\n            transition: 'opacity .5s !important',\n        },\n    })\n})\n","export const fetchRecommendationsFromAPI = async () => {\r\n    const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/recommendations/`,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            },\r\n        }\r\n    )\r\n    return await response.json()\r\n}\r\nexport const acceptRecommendation = async (id: string) => {\r\n    const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/recommendations/${id}/accept/`,\r\n        {\r\n            method: 'PUT',\r\n            body: id,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            },\r\n        }\r\n    )\r\n    return await response.json()\r\n}\r\n\r\nexport const rejectRecommendation = async (id: string) => {\r\n    const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/recommendations/${id}/reject/`,\r\n        {\r\n            method: 'PUT',\r\n            body: id,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            },\r\n        }\r\n    )\r\n    return await response.json()\r\n}","import {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Typography,\n} from '@mui/material'\nimport React, { useMemo, useState } from 'react'\nimport { useMutation } from 'react-query'\nimport { useStyles } from './styles'\nimport { acceptRecommendation, rejectRecommendation } from '../../data/fetch'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown'\n\ninterface Props {\n    id: string\n    title: string\n    imageURL: string\n    summary: string\n    rating: number\n    finishRecommendation: () => void\n}\n\nconst MovieCard = ({\n    id,\n    title,\n    imageURL,\n    summary,\n    rating,\n    finishRecommendation,\n}: Props) => {\n    const [visible, setVisible] = useState('visible')\n    const classes = useStyles()\n    const acceptRecommendationMutation = useMutation(acceptRecommendation)\n    const rejectRecommendationMutation = useMutation(rejectRecommendation)\n\n    function handleAcceptRecommendation() {\n        setVisible('fadeOutLeft')\n        setTimeout(() => {\n            setVisible('visible')\n            finishRecommendation()\n            acceptRecommendationMutation.mutate(id)\n        }, 600)\n    }\n\n    function handleRejectRecommendation() {\n        setVisible('fadeOutRight')\n        setTimeout(() => {\n            setVisible('visible')\n            finishRecommendation()\n            rejectRecommendationMutation.mutate(id)\n        }, 600)\n    }\n\n    const className = useMemo(() => {\n        if (visible === 'visible') return classes.visible\n        else if (visible === 'fadeOutLeft') return classes.fadeOutLeft\n        else if (visible === 'fadeOutRight') return classes.fadeOutRight\n    }, [visible])\n\n    return (\n        <Card className={className}>\n            <CardContent>\n                <Typography\n                    gutterBottom\n                    className={classes.title}\n                    variant=\"body1\"\n                >\n                    {title}\n                </Typography>\n                <Box>\n                    <img src={imageURL} className={classes.image} alt=\"movie\" />\n                </Box>\n                <Typography variant=\"body2\" gutterBottom>\n                    <span className={classes.spanElement}>Summary: </span>\n                    {summary}\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                    <span className={classes.spanElement}>Rating: </span>\n                    {rating}\n                </Typography>\n            </CardContent>\n            <CardActions className={classes.actions}>\n                <Button size=\"small\" onClick={handleAcceptRecommendation}>\n                    <ThumbUpIcon className={classes.thumbUpIcon} />\n                </Button>\n                <Button size=\"small\" onClick={handleRejectRecommendation}>\n                    <ThumbDownIcon className={classes.thumbDownIcon} />\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default MovieCard\n","export const SET_FINISHED_INDEXES = 'SET_FINISHED_INDEXES'\r\nexport const SET_ACTIVE_INDEX = 'SET_ACTIVE_INDEX'\r\nexport const SET_ALL_RECOMMENDATIONS = 'SET_ALL_RECOMMENDATIONS'","import { AnyAction } from 'redux'\nimport * as types from './constants'\n\nexport const setFinishedIndexes = (finishedNumbers: number[]): AnyAction => ({\n    type: types.SET_FINISHED_INDEXES,\n    payload: finishedNumbers,\n})\n\nexport const setAllRecommendations = (\n    allData: { [key: string]: number | string }[]\n): AnyAction => ({\n    type: types.SET_ALL_RECOMMENDATIONS,\n    payload: allData,\n})\n\nexport const setActiveIndex = (index: string): AnyAction => ({\n    type: types.SET_ACTIVE_INDEX,\n    payload: index,\n})\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\nimport {RootState} from \"../../data/state/store\";\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { Box, Card, Container, Typography } from '@mui/material'\nimport { createStyles, makeStyles } from '@mui/styles'\nimport React, { useCallback, useMemo } from 'react'\nimport './App.css'\nimport { useQuery } from 'react-query'\nimport { ClipLoader } from 'react-spinners'\nimport MovieCard from './components/MovieCard'\nimport { fetchRecommendationsFromAPI } from './data/fetch'\nimport {\n    setActiveIndex,\n    setAllRecommendations,\n    setFinishedIndexes,\n} from './data/state/actions'\nimport { useAppDispatch } from './hooks/useAppDispach'\nimport { useAppSelector } from './hooks/useAppSelector'\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        container: {\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%',\n            height: '80%',\n            overflow: 'hidden',\n            paddingTop: 20,\n        },\n        messageCard: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '70vh',\n        },\n        header: {\n            textAlign: 'center',\n        },\n    })\n)\n\nfunction App() {\n    const dispatch = useAppDispatch()\n    const classes = useStyles()\n    const finishedIndexes = useAppSelector((state) => state.finishedIndexes)\n    const activeIndex = useAppSelector((state) => state.activeIndex)\n    const { isLoading, error, data } = useQuery(\n        'recommendations',\n        fetchRecommendationsFromAPI,\n        {\n            onSuccess: (data) => {\n                dispatch(setAllRecommendations(data))\n                dispatch(setActiveIndex(data[0].id))\n            },\n        }\n    )\n    const currentRecommendation = useMemo(() => {\n        return data && activeIndex\n            ? data.find(\n                  (recommendation: { [key: string]: number | string }) =>\n                      recommendation.id === activeIndex\n              )\n            : null\n    }, [activeIndex, data])\n\n    const finishRecommendation = useCallback(() => {\n        const finishedIndexesCopy = [...finishedIndexes]\n        finishedIndexesCopy.push(currentRecommendation)\n        dispatch(setFinishedIndexes(finishedIndexesCopy))\n\n        const dataIndexes = data.map(\n            (recommendation: { [key: string]: number | string }) =>\n                recommendation.id\n        )\n        const nextRecommendation = data[\n            dataIndexes.indexOf(currentRecommendation.id) + 1\n        ]\n            ? data[dataIndexes.indexOf(currentRecommendation.id) + 1].id\n            : null\n        dispatch(setActiveIndex(nextRecommendation))\n    }, [finishedIndexes, currentRecommendation, dispatch, data])\n\n    if (isLoading) return <ClipLoader size={150} />\n    if (error)\n        return <Box>An error has occurred: + {(error as Error).message}</Box>\n\n    return (\n        <Container maxWidth=\"xs\">\n            <Typography variant=\"h2\" className={classes.header} gutterBottom>\n                Tinder for movies\n            </Typography>\n            {activeIndex ? (\n                <Box>\n                    <MovieCard\n                        id={currentRecommendation.id}\n                        title={currentRecommendation.title}\n                        imageURL={currentRecommendation.imageURL}\n                        summary={currentRecommendation.summary}\n                        rating={currentRecommendation.rating}\n                        finishRecommendation={finishRecommendation}\n                    />\n                </Box>\n            ) : (\n                <Box>\n                    <Card className={classes.messageCard}>\n                        <Typography>\n                            Sorry, no more recommendations available\n                        </Typography>\n                    </Card>\n                </Box>\n            )}\n        </Container>\n    )\n}\n\nexport default App\n","import { useDispatch } from 'react-redux'\nimport {AppDispatch} from \"../../data/state/store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n","import { AnyAction } from 'redux'\r\nimport * as types from './constants'\r\nimport {Reducer} from \"./intefaces\";\r\n\r\nexport const initialState = {\r\n    finishedIndexes: [],\r\n    allRecommendations: [],\r\n    activeIndex: null\r\n}\r\n\r\nconst reducer = (\r\n    state: Reducer = initialState,\r\n    action: AnyAction\r\n): Reducer => {\r\n    switch (action.type) {\r\n        case types.SET_ALL_RECOMMENDATIONS:\r\n            return {\r\n                ...state,\r\n                allRecommendations: action.payload,\r\n            }\r\n        case types.SET_FINISHED_INDEXES:\r\n            return {\r\n                ...state,\r\n                finishedIndexes: action.payload,\r\n            }\r\n        case types.SET_ACTIVE_INDEX:\r\n            return {\r\n                ...state,\r\n                activeIndex: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport reducer from './reducer'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport {initialState as initialStateFromReducer} from './reducer'\r\n\r\nfunction configureStore(initialState = initialStateFromReducer ) {\r\n    const store = createStore(\r\n        reducer,\r\n        initialState,\r\n        compose(applyMiddleware(thunk), devToolsEnhancer({}))\r\n    )\r\n    return store\r\n}\r\n\r\nconst store = configureStore()\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {QueryClient, QueryClientProvider} from \"react-query\";\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport store from \"./data/state/store\";\nimport reportWebVitals from './reportWebVitals';\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n    <Provider store={store}>\n        <QueryClientProvider client={queryClient}>\n          <React.StrictMode>\n                <App />\n          </React.StrictMode>\n        </QueryClientProvider>\n    </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}